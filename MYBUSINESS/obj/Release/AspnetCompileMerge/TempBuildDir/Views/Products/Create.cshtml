@model MYBUSINESS.Models.Product

@{
    ViewBag.Title = "Create Product";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="@Url.Content("~/Content/custom/downloads/jquery-ui-1.12.1.custom/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
@*<link href="@Url.Content("~/Content/custom/downloads/jquery-ui.min.css")" rel="stylesheet" type="text/css" />*@
<script src="~/Content/custom/downloads/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>


@*<link href="@Url.Content("~/Content/custom/custom.css")" rel="stylesheet" type="text/css" />*@
<script src="~/Content/custom/supplierPOPR.js"></script>
<script src="~/Content/custom/downloads/jquery.mcautocomplete.js"></script>
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <section class="content">
        <div class="row">
            <!-- left column -->
            <div class="col-md-6">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Create New Product</h3>
                    </div>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <form role="form">
                            <div class="box-body">


                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.SuggestedId, @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })

                                </div>


                                <input type="hidden" name="SupplierId" id="idnSupplier" value="" />

                                <div class="form-group">
                                    @Html.Label("Supplier Name", new { @class = "control-label" })


                                    <input type="text" autocomplete="off" class="form-control" name="ProductSuppName" id="supplier" value="" placeholder="Type supplier name" data-toggle="tooltip" data-placement="top" title="Type supplier name">
                                    @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })

                                </div>



                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", @id = "stock",@readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PerPack, htmlAttributes: new { @class = "control-label" }) (At least 1)

                                    @Html.EditorFor(model => model.PerPack, new { htmlAttributes = new { @class = "form-control", @id = "perPack", @value=1 } })
                                    @Html.ValidationMessageFor(model => model.PerPack, "", new { @class = "text-danger" })

                                </div>

                                

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Saleable, htmlAttributes: new { @class = "control-label" })



                                    @Html.EditorFor(model => model.Saleable)

                                    @*@Html.EditorFor(model => model.Saleable, new[] { new SelectListItem { Text = "Yes", Value = "True", Selected = true }, new SelectListItem { Text = "No", Value = "False" } })*@

                                    @*@Html.CheckBoxFor(m => m.Saleable, new { @value = "true" })*@

                                    @Html.ValidationMessageFor(model => model.Saleable, "", new { @class = "text-danger" })

                                </div>

                            </div>

                            <div class="box-footer">
                                <input type="submit" value="Create" id="CreateProduct" class="btn btn-primary" />
                                @Html.ActionLink("Back to List", "Index")
                            </div>


                        </form>
                    }
                </div>
            </div>
        </div>
    </section>
</div>




<script>
     @foreach(var d in ViewBag.Suppliers)
        {
            @*@: products.push(["@d.Name", "@d.PurchasePrice", "@d.Stock"]);*@
            @: suppliers.push(["@d.Id", "@d.Name", "@d.Address", "@d.Balance"]);
        }
    OnTypeSupplierName('#supplier');

    $("#CreateProduct").click(function () {

        var wentRight = 1;
        var InvalidproductName;
        var idx = 0;

        if ($('#idnSupplier').val() == "") {
            alert('Supplier not selected. Please select supplier from list');
            return false;

        }

    });

    //$('#packing,#perPack').keyup(function () {
    //    $("#stock").val($("#packing").val() * $("#perPack").val())
    //});


</script>
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
